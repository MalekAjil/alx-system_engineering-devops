#!/usr/bin/bash
#First, in order to ensure the downloads are valid, add the GPG key for the official Docker repository to your system:

curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
#Add the Docker repository to APT sources:

sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
#Next, update the package database with the Docker packages from the newly added repo:

sudo apt-get update
#Make sure you are about to install from the Docker repo instead of the default Ubuntu 16.04 repo:

apt-cache policy docker-ce

#Notice that docker-ce is not installed, but the candidate for installation is from the Docker repository for Ubuntu 16.04 (xenial).

#Finally, install Docker:

sudo apt-get install -y docker-ce

#Docker should now be installed, the daemon started, and the process enabled to start on boot. Check that it’s running:
sudo service docker status

#If you want to avoid typing sudo whenever you run the docker command, add your username to the docker group:

sudo usermod -aG docker ${USER}

#To apply the new group membership, you can log out of the server and back in, or you can type the following:

su - ${USER}

#You will be prompted to enter your user’s password to continue. Afterwards, you can confirm that your user is now added to the docker group by typing:

id -nG

#If you need to add a user to the docker group that you’re not logged in as, declare that username explicitly using:

#sudo usermod -aG docker username

#To check whether you can access and download images from Docker Hub, type:

docker run hello-world

#You can search for images available on Docker Hub by using the docker command with the search subcommand. For example, to search for the Ubuntu image, type:

docker search ubuntu

#Once you’ve identified the image that you would like to use, you can download it to your computer using the pull subcommand. Try this with the ubuntu image, like so:

docker pull ubuntu

#After an image has been downloaded, you may then run a container using the downloaded image with the run subcommand. If an image has not been downloaded when docker is executed with the run subcommand, the Docker client will first download the image, then run a container using it:

docker run ubuntu

#To see the images that have been downloaded to your computer, type:

docker images

#As an example, let’s run a container using the latest image of Ubuntu. The combination of the -i and -t switches gives you interactive shell access into the container:

docker run -it ubuntu

